<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/jdbc  
                        http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">
	<!-- 自动扫描 -->
	<!-- <context:component-scan base-package="com.cjt.service" /> -->
	<!-- 引入配置文件 -->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location" value="classpath:jdbc.properties" /> </bean> -->

	<bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="url" value="jdbc:derby:testdb1;create=true" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="1" />
		<property name="maxIdle" value="1" />
		<property name="maxWait" value="30000" />
	</bean>
	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="url" value="jdbc:derby:testdb2;create=true" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="1" />
		<property name="maxIdle" value="1" />
		<property name="maxWait" value="30000" />
	</bean>
	<bean id="dataSource" class="org.apache.ibatis.custom.RoutingDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="dataSource1" />
				<entry key="slave" value-ref="dataSource2" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource1" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionFactory">
		 <bean class="org.apache.ibatis.custom.SpringManagedArgedTransactionFactory">
		  <property name="dataSourceConfigs">
		     <map key-type="java.lang.String">
		      <entry key="com.mq.demo.springmybatis.dao.UserDao" value="slave"/>
		     </map>
		  </property>
		 </bean>
		</property>
	 <property name="configLocation" value="classpath:configuration.xml" />  
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mq.demo.springmybatis.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
<!-- 	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
 -->
</beans>